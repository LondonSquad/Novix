name: Build And Test Coverage Checks

on:
  pull_request:
    branches:
      - develop
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-cache-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-cache-

      - name: Cache Build Outputs
        uses: actions/cache@v4
        with:
          path: |
            **/build/
          key: build-cache-${{ github.sha }}
          restore-keys: |
            build-cache-

      - name: Setup Gradlew
        run: chmod +x ./gradlew

      - name: Decode Firebase Config
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json

      - name: Build with Gradle
        run: ./gradlew build -x test -x koverVerify


  test:
    name: Test Coverage
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-cache-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-cache-

      - name: Cache Build Outputs
        uses: actions/cache@v4
        with:
          path: |
            **/build/
          key: build-cache-${{ github.sha }}
          restore-keys: |
            build-cache-

      - name: Setup Gradlew
        run: chmod +x ./gradlew

      - name: Decode Firebase Config
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json

      - name: Generate Coverage Reports
        run: ./gradlew koverXmlReport

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: kover-coverage-report
          path: build/reports/kover/report.xml

      - name: Run Coverage Check
        run: ./gradlew koverVerify

  analyze-pr:
    name: Analyze PR Code Coverage
    needs: test
    if: github.event_name == 'pull_request' && always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Kover Report
        uses: actions/download-artifact@v4
        with:
          name: kover-coverage-report
          path: build/reports/kover/

      - name: Comment PR with Overall Coverage
        uses: mi-kas/kover-report@v1
        with:
          path: build/reports/kover/report.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          update-comment: true
          title: Code Coverage Summary