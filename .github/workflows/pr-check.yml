# .github/workflows/pr-check.yml
name: PR Requirements
on:
  pull_request:
    branches: [develop]
  pull_request_review:
    types: [submitted, dismissed]

jobs:
  check-branch-updated:
    runs-on: ubuntu-latest
    steps:
      - name: Check Branch is Up to Date
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const pr_number = context.payload.pull_request?.number || context.payload.number;
            
            // Get PR details
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: pr_number
            });
            
            // Check if branch is behind base
            const comparison = await github.rest.repos.compareCommits({
              owner,
              repo,
              base: pr.data.base.sha,
              head: pr.data.head.sha
            });
            
            if (comparison.data.behind_by > 0) {
              core.setFailed(`❌ Branch is ${comparison.data.behind_by} commits behind develop. Please update your branch.`);
            } else {
              console.log('✅ Branch is up to date with develop');
            }

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Decode Firebase Config
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json
        
      - name: Run tests
        run: ./gradlew test
        
      - name: Run lint checks
        run: ./gradlew lint
        
      - name: Build project
        run: ./gradlew build
